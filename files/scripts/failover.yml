---
- hosts: "{{ old_master }}"
  gather_facts: False
  user: root

  tasks:

    - name: Setting read only the old master
      action: shell mysql -e "set global read_only=1;"

    - name: Check read only
      action: shell mysql --silent --silent -e "select @@read_only"
      register: is_read_only

    - assert:
        that:
          - "is_read_only.stdout == '1'"

- hosts: slave
  gather_facts: False
  user: root

  tasks:

    - name: Disabling {{ old_master }} in haproxy
      action:  shell echo "set server mysql/{{ old_master }} weight 0" | socat /var/lib/haproxy/stats stdio

    - name: Check HAProxy stopped
      action: shell echo  "get weight mysql/master1" | socat /var/lib/haproxy/stats stdio | awk '{print $1}'
      register: old_master_weight

    - assert:
        that:
          - "old_master_weight.stdout == '0'"

- hosts: "{{ new_master }}"
  gather_facts: False
  user: root

  tasks:

    - name: Stopping slave
      action: shell mysql -e "stop slave;"

    - name: Resetting slave
      action: shell mysql -e "reset slave all;"

    - name: Check if slave is resetted
      action: shell mysql -e "show slave status\G"
      register: slave_status

    - assert:
        that:
          - "slave_status.stdout == ''"

- hosts: "{{ old_master }}"
  gather_facts: False
  user: root

  tasks:

    - name: Setting up old master as slave of the new master
      action: shell  mysql -e 'change master to master_host="{{ new_master }}", master_user="repl", master_password="repl", master_auto_position=1;'

    - name: Starting up new slave
      action: shell mysql -e "start slave;"

- hosts: slave
  gather_facts: False
  user: root

  tasks:

    - name: Enabling {{ new_master }} in haproxy
      action:  shell echo "set server mysql/{{ new_master }} weight 1" | socat /var/lib/haproxy/stats stdio

- hosts: "{{ new_master }}"
  gather_facts: False
  user: root

  tasks:

    - name: Setting new master read-write
      action: shell mysql -e "set global read_only=0;"

    - name: Checking Read-Write
      action: shell mysql --silent --silent -e "select @@read_only"
      register: is_read_write

    - assert:
        that:
          - "is_read_write.stdout == '0'"
